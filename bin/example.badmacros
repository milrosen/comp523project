(define-syntax incr
    (syntax-laws expr 
        (((incr x)
        ((x ident))
        (+ x 1)))))
(define-syntax curry
    (syntax-laws expr
      (((curry (x args) y)
        ((x ident) (args (ident ...)) (y expr))
        (lambda (x) (curry args y)))
       ((curry (x) y)
        ((x ident) (y expr))
        (lambda (x) y)))))
(define-syntax defun
    (syntax-laws def
        (((defun x args y)
        ((x ident) (args (ident ...)) (y expr))
        (define x (curry args y))))))

(defun sum l(a b c d) (+ a b c d))
(incr x)
((+ 5) 6)